#!/bin/bash

cd `dirname $0`


ln -s `pwd`/vimrc ~/.vimrc


git config --global core.excludesfile `pwd`/gitignore
git config --global push.default simple

cat >>~/.hgrc <<EOF
[ui]
ignore = $(pwd)/hgignore
%include $(pwd)/hgrc
EOF


append_if_not_already_in_file()
{
    FILENAME=$1
    TEXT=$2
    grep --quiet --no-messages -x --fixed-strings "$TEXT" "$FILENAME" || echo "$TEXT" >> "$FILENAME"
}

bashrc() { append_if_not_already_in_file ~/.bashrc "$1"; }
zshrc()  { append_if_not_already_in_file ~/.zshrc "$1"; }
bashrc_and_zshrc() { bashrc "$1"; zshrc "$1"; }

bashrc_and_zshrc "export EDITOR=vim"
bashrc_and_zshrc 'export MAKEFLAGS="$MAKEFLAGS -j`getconf _NPROCESSORS_ONLN`"'

bashrc "alias gst='git status'"
bashrc "alias hga='hg add'"
bashrc "alias hgc='hg commit'"
bashrc "alias hgd='hg diff -g'"
bashrc "alias hge='hg expo -g'"
bashrc "alias hgl='hg log -v'"
bashrc "alias hgr='hg revert'"
bashrc "alias hgs='hg status --copies'"

bashrc "stty -ixon  # disable Xon/Xoff flow control (so Ctrl-S functions as Ctrl-R but searches in the opposite direction)."

zshrc "set_output_carriage_return_with_new_line() { stty onlcr }"
zshrc "autoload -Uz add-zsh-hook"
zshrc "add-zsh-hook precmd set_output_carriage_return_with_new_line  # zsh on Ubuntu 18.04.1 using WSL: Something (I don't know what) was often mucking up the terminal settings (new-lines output without carriage returns) - This is a workaround."

zshrc "disable -r time && alias time='time -f \"%E real, %U user, %S system\" ' # I like the wall-clock time to be output first. (zsh's in-built time command outputs it last.) zsh's in-built time command outputs to stdout. (This will output to stderr?)"

# xxx cp ctags.cnf ~/.ctags


# Install z command for use from bash command line. z changes directory - pass it part of the pathname of a previously visited directory.
mkdir -p ~/bin
if [ ! -f ~/bin/z/z.sh ]; then
    git clone https://github.com/rupa/z.git ~/bin/z
fi
bashrc ". ~/bin/z/z.sh"
